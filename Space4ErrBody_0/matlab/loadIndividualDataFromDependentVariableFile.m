function [ individual ] = loadIndividualDataFromDependentVariableFile( depvar, interp_Ascent, interp_Descent, DV_mapped_Ascent, DV_mapped_Descent, headingErrorDeadbandBounds, alphaMachBounds )

individual.t                                    = depvar(:,2);
individual.x_R                                  = depvar(:,3);
individual.y_R                                  = depvar(:,4);
individual.z_R                                  = depvar(:,5);
individual.altitude                             = depvar(:,6);
individual.latitude_angle                       = rad2deg(depvar(:,7));
individual.longitude_angle                      = rad2deg(depvar(:,8));
individual.heading_angle                        = convertNegativeAnglesToPositive(depvar(:,9));
individual.flight_path_angle                    = depvar(:,10);
individual.angle_of_attack                      = depvar(:,11);
individual.angle_of_sideslip                    = depvar(:,12);
individual.bank_angle                           = depvar(:,13);
individual.height                               = depvar(:,14);
individual.mach                                 = depvar(:,15);
individual.airspeed                             = depvar(:,16);
individual.total_aero_g_load                    = depvar(:,17);
individual.acc_aero_x                           = depvar(:,18);
individual.acc_aero_y                           = depvar(:,19);
individual.acc_aero_z                           = depvar(:,20);
individual.acc_grav_x                           = depvar(:,21);
individual.acc_grav_y                           = depvar(:,22);
individual.acc_grav_z                           = depvar(:,23);
individual.acc_thru_x                           = depvar(:,24);
individual.acc_thru_y                           = depvar(:,25);
individual.acc_thru_z                           = depvar(:,26);
individual.acc_x                                = depvar(:,18) + depvar(:,21) + depvar(:,24);
individual.acc_y                                = depvar(:,19) + depvar(:,22) + depvar(:,25);
individual.acc_z                                = depvar(:,20) + depvar(:,23) + depvar(:,26);
individual.acc_aero_M                           = sqrt(depvar(:,18).^2 + depvar(:,19).^2 + depvar(:,20).^2);
individual.acc_grav_M                           = sqrt(depvar(:,21).^2 + depvar(:,22).^2 + depvar(:,23).^2);
individual.acc_thru_M                           = sqrt(depvar(:,24).^2 + depvar(:,25).^2 + depvar(:,26).^2);
individual.dynamicPressure                      = depvar(:,27);
individual.heat_rate_TUDAT_nose                 = depvar(:,28);
individual.mass_rate                            = depvar(:,29);
individual.mass                                 = depvar(:,30);
individual.specificEnergy                       = depvar(:,31);
individual.normalizedSpecificEnergy             = depvar(:,32);
individual.evaluated_throttle_setting           = depvar(:,33);
individual.evaluated_thrust_elevation_angle     = depvar(:,34);
individual.evaluated_thrust_azimuth_angle       = depvar(:,35);
individual.evaluated_angle_of_attack            = depvar(:,36);
individual.evaluated_bank_angle                 = depvar(:,37);
individual.engine_status                        = depvar(:,38);
individual.distance_traveled                    = depvar(:,39);
individual.distance_to_go                       = depvar(:,40);
individual.heading_to_target                    = depvar(:,41);
individual.heading_error                        = depvar(:,42);
individual.heat_flux_tauber_leadingedge         = depvar(:,43);
individual.body_fixed_thrust_load_x             = depvar(:,44);
individual.body_fixed_thrust_load_y             = depvar(:,45);
individual.body_fixed_thrust_load_z             = depvar(:,46);
individual.bending_moment                       = depvar(:,47);
individual.local_gravity_1                      = depvar(:,48);
individual.local_gravity_2                      = depvar(:,49);
individual.skip_suppression_limit               = depvar(:,50);
individual.bodyflap_deflection                  = depvar(:,51);
individual.increment_Cm_bodyflap                = depvar(:,52);
individual.increment_Cm_bodyflap_dif            = depvar(:,53);
individual.body_fixed_total_load_x              = depvar(:,54);
individual.body_fixed_total_load_y              = depvar(:,55);
individual.body_fixed_total_load_z              = depvar(:,56);
individual.body_fixed_total_g_load_x            = depvar(:,57);
individual.body_fixed_total_g_load_y            = depvar(:,58);
individual.body_fixed_total_g_load_z            = depvar(:,59);
individual.body_fixed_total_g_load_mag          = depvar(:,60);
individual.body_fixed_aero_load_x               = depvar(:,61);
individual.body_fixed_aero_load_y               = depvar(:,62);
individual.body_fixed_aero_load_z               = depvar(:,63);
individual.aero_force_coefficient_C_D           = depvar(:,64);
individual.aero_force_coefficient_C_S           = depvar(:,65);
individual.aero_force_coefficient_C_L           = depvar(:,66);
individual.aero_moment_coefficient_C_l          = depvar(:,67);
individual.aero_moment_coefficient_C_m          = depvar(:,68);
individual.aero_moment_coefficient_C_n          = depvar(:,69);
individual.heat_flux_chapman_nose               = depvar(:,70);
individual.localDensity                         = depvar(:,71);
individual.passenger_fixed_total_g_load_x       = depvar(:,72);
individual.passenger_fixed_total_g_load_y       = depvar(:,73);
individual.passenger_fixed_total_g_load_z       = depvar(:,74);
individual.commanded_throttle_setting           = depvar(:,75);
individual.commanded_thrust_elevation_angle     = depvar(:,76);
individual.commanded_thrust_azimuth_angle       = depvar(:,77);
individual.commanded_angle_of_attack            = depvar(:,78);
individual.commanded_bank_angle                 = depvar(:,79);
individual.currentLiftForce                     = depvar(:,80);
individual.headingErrorDeadband                 = depvar(:,81);
individual.tempBankAngle                        = depvar(:,82);
individual.reversalConditional                  = depvar(:,83);
individual.bank_angle_reversal_trigger          = depvar(:,84);
individual.wall_temperature_chapman             = depvar(:,85);
individual.wall_temperature_tauber_stagnation   = depvar(:,86);
individual.wall_temperature_tauber_flatplate    = depvar(:,87);
individual.heat_flux_tauber_stagnation          = depvar(:,88);
individual.heat_flux_tauber_flatplate           = depvar(:,89);
individual.groundtrack_covered                  = depvar(:,90);
individual.groundtrack_difference               = depvar(:,91);
individual.time_vector                          = depvar(:,92);
individual.flight_path_angle_rate               = depvar(:,93);
individual.cumulative_distance_travelled        = depvar(:,94);
individual.elevon_deflection                    = depvar(:,95);
individual.thrustMagnitude                      = depvar(:,96);
individual.speedOfSound                         = depvar(:,97);
individual.adiabaticWallTemperature             = depvar(:,98);
individual.freestreamTemperature                = depvar(:,99);
individual.currentDragForce                     = depvar(:,100);
individual.estimatedFightPathAngle              = depvar(:,101);
individual.aerodyamicFrameAerodynamicLoad_x     = depvar(:,102);
individual.aerodyamicFrameAerodynamicLoad_y     = depvar(:,103);
individual.aerodyamicFrameAerodynamicLoad_z     = depvar(:,104);
individual.aerodyamicFrameTotalLoad_x           = depvar(:,105);
individual.aerodyamicFrameTotalLoad_y           = depvar(:,106);
individual.aerodyamicFrameTotalLoad_z           = depvar(:,107);
individual.trajectoryphase                      = depvar(:,108);

individual.interp_E_mapped_Ascent               = interp_Ascent(:,1);
individual.interp_angle_of_attack_Ascent        = interp_Ascent(:,2);
individual.interp_bank_angle_Ascent             = interp_Ascent(:,3);
individual.interp_thrust_elevation_angle_Ascent = interp_Ascent(:,4);
individual.interp_thrust_azimuth_angle_Ascent   = interp_Ascent(:,5);
individual.interp_throttle_setting_Ascent       = interp_Ascent(:,6);

individual.interp_E_mapped_Descent               = interp_Descent(:,1);
individual.interp_angle_of_attack_Descent        = interp_Descent(:,2);
individual.interp_bank_angle_Descent             = interp_Descent(:,3);
individual.interp_thrust_elevation_angle_Descent = interp_Descent(:,4);
individual.interp_thrust_azimuth_angle_Descent   = interp_Descent(:,5);
individual.interp_throttle_setting_Descent       = interp_Descent(:,6);

individual.DV_E_mapped_Ascent               = DV_mapped_Ascent(:,1);
individual.DV_angle_of_attack_Ascent        = DV_mapped_Ascent(:,2);
individual.DV_bank_angle_Ascent             = DV_mapped_Ascent(:,3);
individual.DV_thrust_elevation_angle_Ascent = DV_mapped_Ascent(:,4);
individual.DV_thrust_azimuth_angle_Ascent   = DV_mapped_Ascent(:,5);
individual.DV_throttle_setting_Ascent       = DV_mapped_Ascent(:,6);
individual.DV_node_location_Ascent          = DV_mapped_Ascent(:,7);

individual.DV_E_mapped_Descent               = DV_mapped_Descent(:,1);
individual.DV_angle_of_attack_Descent        = DV_mapped_Descent(:,2);
individual.DV_bank_angle_Descent             = DV_mapped_Descent(:,3);
individual.DV_thrust_elevation_angle_Descent = DV_mapped_Descent(:,4);
individual.DV_thrust_azimuth_angle_Descent   = DV_mapped_Descent(:,5);
individual.DV_throttle_setting_Descent       = DV_mapped_Descent(:,6);
individual.DV_node_location_Descent          = DV_mapped_Descent(:,7);


individual.alphaMachBounds_Mach    = alphaMachBounds(:,1);
individual.alphaMachBounds_LB          = alphaMachBounds(:,2);
individual.alphaMachBounds_UB          = alphaMachBounds(:,3);

individual.headingErrorDeadBand_distance    = headingErrorDeadbandBounds(:,1);
individual.headingErrorDeadBand_LB          = headingErrorDeadbandBounds(:,3);
individual.headingErrorDeadBand_UP          = headingErrorDeadbandBounds(:,2);


end