function [  ] = plotTrajectories( compilation )


lat_f_deg = 38.9444444444444;
lon_f_deg = -77.4558333333;

if compilation(1).validation == 1
    
    lon_i_deg = -106.7;
    lon_i_rad = deg2rad(-22.37);
    lon_i_deg = -22.37;
    lat_f_deg = 5;
    lon_f_deg = -53;
    validation = 1;
end

beta = 0:pi/50:2*pi;
a = deg2rad(0.75);
b = asin(sin(beta)*sin(a));
alpha = pi/2;
c = 2*atan(tan(.5*(a - b)).*sin(.5*(alpha + beta))./sin(.5*(alpha - beta)));
xunit = compilation(1).centraTargetCoordinates(2) + rad2deg(c);
yunit = compilation(1).centraTargetCoordinates(1) + rad2deg(b);


xunit = [ -77.45583333	-77.44970928	-77.44358548	-77.43746217	-77.43133962	-77.42521806	-77.41909775	-77.41297894	-77.40686188	-77.40074681	-77.39463399	-77.38852367	-77.38241608	-77.37631149	-77.37021015	-77.36411229	-77.35801817	-77.35192804	-77.34584214	-77.33976072	-77.33368404	-77.32761234	-77.32154586	-77.31548485	-77.30942956	-77.30338024	-77.29733714	-77.29130049	-77.28527054	-77.27924755	-77.27323175	-77.26722339	-77.26122271	-77.25522996	-77.24924539	-77.24326923	-77.23730173	-77.23134313	-77.22539367	-77.2194536	-77.21352316	-77.20760259	-77.20169212	-77.195792	-77.18990247	-77.18402377	-77.17815614	-77.17229981	-77.16645502	-77.16062201	-77.15480102	-77.14899228	-77.14319602	-77.1374125	-77.13164192	-77.12588454	-77.12014059	-77.11441029	-77.10869388	-77.10299159	-77.09730366	-77.0916303	-77.08597176	-77.08032826	-77.07470003	-77.06908729	-77.06349028	-77.05790922	-77.05234433	-77.04679585	-77.04126398	-77.03574897	-77.03025102	-77.02477037	-77.01930723	-77.01386182	-77.00843437	-77.00302509	-76.99763419	-76.99226191	-76.98690844	-76.98157402	-76.97625885	-76.97096314	-76.96568712	-76.96043098	-76.95519495	-76.94997923	-76.94478404	-76.93960958	-76.93445605	-76.92932367	-76.92421264	-76.91912317	-76.91405546	-76.90900971	-76.90398613	-76.89898491	-76.89400626	-76.88905037	-76.88411745	-76.87920768	-76.87432127	-76.86945842	-76.8646193	-76.85980413	-76.85501309	-76.85024636	-76.84550415	-76.84078664	-76.83609401	-76.83142646	-76.82678416	-76.82216731	-76.81757609	-76.81301067	-76.80847125	-76.80395799	-76.79947109	-76.79501071	-76.79057703	-76.78617023	-76.78179049	-76.77743797	-76.77311284	-76.76881529	-76.76454547	-76.76030356	-76.75608972	-76.75190412	-76.74774692	-76.74361829	-76.73951839	-76.73544738	-76.73140542	-76.72739266	-76.72340928	-76.71945541	-76.71553122	-76.71163686	-76.70777249	-76.70393824	-76.70013428	-76.69636075	-76.6926178	-76.68890557	-76.68522421	-76.68157387	-76.67795467	-76.67436677	-76.6708103	-76.6672854	-76.66379221	-76.66033086	-76.65690149	-76.65350422	-76.6501392	-76.64680654	-76.64350638	-76.64023885	-76.63700407	-76.63380216	-76.63063325	-76.62749745	-76.6243949	-76.6213257	-76.61828998	-76.61528784	-76.61231941	-76.6093848	-76.60648412	-76.60361748	-76.60078499	-76.59798675	-76.59522288	-76.59249347	-76.58979863	-76.58713846	-76.58451306	-76.58192254	-76.57936697	-76.57684648	-76.57436113	-76.57191104	-76.56949629	-76.56711697	-76.56477317	-76.56246498	-76.56019248	-76.55795575	-76.55575489	-76.55358996	-76.55146106	-76.54936825	-76.54731162	-76.54529124	-76.54330718	-76.54135951	-76.53944831	-76.53757365	-76.53573559	-76.5339342	-76.53216955	-76.53044169	-76.52875069	-76.52709661	-76.52547951	-76.52389944	-76.52235647	-76.52085064	-76.51938201	-76.51795062	-76.51655654	-76.5151998	-76.51388045	-76.51259854	-76.51135412	-76.51014722	-76.50897788	-76.50784615	-76.50675205	-76.50569564	-76.50467693	-76.50369597	-76.50275279	-76.50184741	-76.50097987	-76.50015019	-76.49935839	-76.49860451	-76.49788855	-76.49721055	-76.49657053	-76.49596849	-76.49540446	-76.49487845	-76.49439048	-76.49394055	-76.49352869	-76.49315488	-76.49281915	-76.4925215	-76.49226193	-76.49204044	-76.49185704	-76.49171173	-76.4916045	-76.49153536	-76.49150428	-76.49151128	-76.49155634	-76.49163945	-76.49176061	-76.49191979	-76.49211698	-76.49235218	-76.49262536	-76.49293651	-76.4932856	-76.49367261	-76.49409753	-76.49456032	-76.49506096	-76.49559942	-76.49617568	-76.49678971	-76.49744147	-76.49813093	-76.49885805	-76.49962281	-76.50042515	-76.50126505	-76.50214246	-76.50305735	-76.50400966	-76.50499935	-76.50602638	-76.5070907	-76.50819226	-76.50933101	-76.5105069	-76.51171987	-76.51296987	-76.51425685	-76.51558074	-76.51694149	-76.51833903	-76.51977331	-76.52124426	-76.52275181	-76.52429591	-76.52587648	-76.52749346	-76.52914677	-76.53083634	-76.5325621	-76.53432398	-76.5361219	-76.53795577	-76.53982554	-76.54173111	-76.5436724	-76.54564933	-76.54766182	-76.54970978	-76.55179312	-76.55391176	-76.55606561	-76.55825458	-76.56047857	-76.5627375	-76.56503126	-76.56735977	-76.56972292	-76.57212062	-76.57455276	-76.57701925	-76.57951999	-76.58205486	-76.58462377	-76.58722661	-76.58986327	-76.59253365	-76.59523762	-76.5979751	-76.60074595	-76.60355006	-76.60638733	-76.60925764	-76.61216086	-76.61509688	-76.61806558	-76.62106685	-76.62410054	-76.62716656	-76.63026476	-76.63339502	-76.63655722	-76.63975123	-76.64297692	-76.64623416	-76.64952281	-76.65284275	-76.65619384	-76.65957595	-76.66298893	-76.66643266	-76.66990699	-76.67341178	-76.6769469	-76.6805122	-76.68410754	-76.68773277	-76.69138776	-76.69507234	-76.69878639	-76.70252974	-76.70630225	-76.71010377	-76.71393414	-76.71779322	-76.72168085	-76.72559688	-76.72954115	-76.7335135	-76.73751377	-76.74154182	-76.74559747	-76.74968057	-76.75379096	-76.75792847	-76.76209293	-76.7662842	-76.77050209	-76.77474644	-76.77901709	-76.78331387	-76.7876366	-76.79198512	-76.79635925	-76.80075883	-76.80518368	-76.80963363	-76.81410849	-76.81860811	-76.82313229	-76.82768086	-76.83225365	-76.83685047	-76.84147114	-76.84611549	-76.85078332	-76.85547447	-76.86018874	-76.86492595	-76.86968591	-76.87446845	-76.87927337	-76.88410048	-76.8889496	-76.89382053	-76.8987131	-76.9036271	-76.90856234	-76.91351864	-76.9184958	-76.92349363	-76.92851192	-76.9335505	-76.93860916	-76.9436877	-76.94878593	-76.95390364	-76.95904065	-76.96419675	-76.96937174	-76.97456543	-76.9797776	-76.98500806	-76.9902566	-76.99552302	-77.00080713	-77.0061087	-77.01142755	-77.01676345	-77.02211622	-77.02748563	-77.03287148	-77.03827356	-77.04369167	-77.0491256	-77.05457513	-77.06004006	-77.06552017	-77.07101525	-77.07652509	-77.08204949	-77.08758822	-77.09314107	-77.09870783	-77.10428828	-77.10988221	-77.1154894	-77.12110965	-77.12674272	-77.13238841	-77.13804649	-77.14371676	-77.14939898	-77.15509295	-77.16079845	-77.16651524	-77.17224313	-77.17798188	-77.18373127	-77.18949109	-77.1952611	-77.2010411	-77.20683086	-77.21263016	-77.21843877	-77.22425647	-77.23008304	-77.23591826	-77.24176189	-77.24761372	-77.25347353	-77.25934108	-77.26521616	-77.27109853	-77.27698797	-77.28288426	-77.28878717	-77.29469648	-77.30061195	-77.30653337	-77.3124605	-77.31839311	-77.32433099	-77.3302739	-77.33622161	-77.3421739	-77.34813055	-77.35409131	-77.36005597	-77.36602429	-77.37199604	-77.37797101	-77.38394896	-77.38992965	-77.39591287	-77.40189838	-77.40788595	-77.41387536	-77.41986637	-77.42585876	-77.4318523	-77.43784676	-77.4438419	-77.4498375	-77.45583333	-77.46182916	-77.46782476	-77.4738199	-77.47981436	-77.4858079	-77.49180029	-77.4977913	-77.50378071	-77.50976828	-77.51575379	-77.52173701	-77.5277177	-77.53369565	-77.53967062	-77.54564237	-77.5516107	-77.55757535	-77.56353611	-77.56949276	-77.57544505	-77.58139276	-77.58733567	-77.59327355	-77.59920616	-77.60513329	-77.61105471	-77.61697018	-77.62287949	-77.6287824	-77.63467869	-77.64056813	-77.6464505	-77.65232558	-77.65819313	-77.66405294	-77.66990477	-77.6757484	-77.68158362	-77.68741019	-77.69322789	-77.6990365	-77.7048358	-77.71062556	-77.71640556	-77.72217557	-77.72793539	-77.73368478	-77.73942353	-77.74515142	-77.75086821	-77.75657371	-77.76226768	-77.7679499	-77.77362017	-77.77927825	-77.78492394	-77.79055701	-77.79617726	-77.80178445	-77.80737838	-77.81295883	-77.81852559	-77.82407844	-77.82961717	-77.83514157	-77.84065141	-77.84614649	-77.8516266	-77.85709153	-77.86254106	-77.86797499	-77.8733931	-77.87879518	-77.88418103	-77.88955044	-77.89490321	-77.90023911	-77.90555796	-77.91085953	-77.91614364	-77.92141006	-77.9266586	-77.93188906	-77.93710123	-77.94229492	-77.94746991	-77.95262601	-77.95776302	-77.96288073	-77.96797896	-77.9730575	-77.97811616	-77.98315474	-77.98817303	-77.99317086	-77.99814802	-78.00310432	-78.00803956	-78.01295356	-78.01784613	-78.02271706	-78.02756618	-78.03239329	-78.03719821	-78.04198075	-78.04674071	-78.05147792	-78.05619219	-78.06088334	-78.06555117	-78.07019552	-78.07481619	-78.07941301	-78.0839858	-78.08853437	-78.09305856	-78.09755817	-78.10203303	-78.10648298	-78.11090783	-78.11530741	-78.11968154	-78.12403006	-78.12835279	-78.13264957	-78.13692022	-78.14116457	-78.14538246	-78.14957373	-78.15373819	-78.1578757	-78.16198609	-78.16606919	-78.17012484	-78.17415289	-78.17815316	-78.18212551	-78.18606978	-78.18998581	-78.19387344	-78.19773252	-78.20156289	-78.20536441	-78.20913692	-78.21288027	-78.21659432	-78.2202789	-78.22393389	-78.22755912	-78.23115446	-78.23471976	-78.23825488	-78.24175967	-78.245234	-78.24867773	-78.25209071	-78.25547282	-78.25882391	-78.26214385	-78.2654325	-78.26868974	-78.27191543	-78.27510944	-78.27827164	-78.2814019	-78.2845001	-78.28756612	-78.29059981	-78.29360108	-78.29656978	-78.2995058	-78.30240902	-78.30527933	-78.3081166	-78.31092071	-78.31369156	-78.31642904	-78.31913301	-78.32180339	-78.32444005	-78.32704289	-78.3296118	-78.33214667	-78.33464741	-78.3371139	-78.33954604	-78.34194374	-78.34430689	-78.3466354	-78.34892916	-78.35118809	-78.35341208	-78.35560105	-78.3577549	-78.35987354	-78.36195688	-78.36400484	-78.36601733	-78.36799426	-78.36993555	-78.37184112	-78.37371089	-78.37554476	-78.37734268	-78.37910456	-78.38083032	-78.38251989	-78.3841732	-78.38579018	-78.38737075	-78.38891485	-78.3904224	-78.39189335	-78.39332763	-78.39472517	-78.39608592	-78.39740981	-78.39869679	-78.39994679	-78.40115976	-78.40233565	-78.4034744	-78.40457596	-78.40564028	-78.40666731	-78.407657	-78.40860931	-78.4095242	-78.41040161	-78.41124151	-78.41204385	-78.41280861	-78.41353573	-78.41422519	-78.41487695	-78.41549098	-78.41606724	-78.4166057	-78.41710634	-78.41756913	-78.41799405	-78.41838106	-78.41873015	-78.4190413	-78.41931448	-78.41954968	-78.41974687	-78.41990605	-78.42002721	-78.42011032	-78.42015538	-78.42016238	-78.4201313	-78.42006216	-78.41995493	-78.41980962	-78.41962622	-78.41940473	-78.41914516	-78.41884751	-78.41851178	-78.41813797	-78.41772611	-78.41727618	-78.41678821	-78.4162622	-78.41569817	-78.41509613	-78.41445611	-78.41377811	-78.41306215	-78.41230827	-78.41151647	-78.41068679	-78.40981925	-78.40891387	-78.40797069	-78.40698973	-78.40597102	-78.40491461	-78.40382051	-78.40268878	-78.40151944	-78.40031254	-78.39906812	-78.39778621	-78.39646686	-78.39511012	-78.39371604	-78.39228465	-78.39081602	-78.38931019	-78.38776722	-78.38618715	-78.38457005	-78.38291597	-78.38122497	-78.37949711	-78.37773246	-78.37593107	-78.37409301	-78.37221835	-78.37030715	-78.36835948	-78.36637542	-78.36435504	-78.36229841	-78.3602056	-78.3580767	-78.35591177	-78.35371091	-78.35147418	-78.34920168	-78.34689349	-78.34454969	-78.34217037	-78.33975562	-78.33730553	-78.33482019	-78.33229969	-78.32974412	-78.3271536	-78.3245282	-78.32186803	-78.31917319	-78.31644378	-78.31367991	-78.31088167	-78.30804918	-78.30518254	-78.30228186	-78.29934725	-78.29637882	-78.29337668	-78.29034096	-78.28727176	-78.28416921	-78.28103342	-78.2778645	-78.27466259	-78.27142781	-78.26816028	-78.26486012	-78.26152746	-78.25816244	-78.25476517	-78.2513358	-78.24787445	-78.24438126	-78.24085636	-78.23729989	-78.23371199	-78.23009279	-78.22644245	-78.22276109	-78.21904886	-78.21530591	-78.21153238	-78.20772842	-78.20389417	-78.2000298	-78.19613544	-78.19221125	-78.18825738	-78.184274	-78.18026124	-78.17621928	-78.17214827	-78.16804837	-78.16391974	-78.15976254	-78.15557694	-78.1513631	-78.14712119	-78.14285137	-78.13855382	-78.1342287	-78.12987617	-78.12549643	-78.12108963	-78.11665595	-78.11219557	-78.10770867	-78.10319541	-78.09865599	-78.09409057	-78.08949935	-78.0848825	-78.0802402	-78.07557265	-78.07088002	-78.06616251	-78.0614203	-78.05665357	-78.05186253	-78.04704736	-78.04220824	-78.03734539	-78.03245898	-78.02754921	-78.02261629	-78.0176604	-78.01268175	-78.00768053	-78.00265695	-77.9976112	-77.99254349	-77.98745402	-77.98234299	-77.97721061	-77.97205708	-77.96688262	-77.96168743	-77.95647171	-77.95123568	-77.94597954	-77.94070352	-77.93540781	-77.93009264	-77.92475822	-77.91940475	-77.91403247	-77.90864157	-77.90323229	-77.89780484	-77.89235943	-77.88689629	-77.88141564	-77.87591769	-77.87040268	-77.86487081	-77.85932233	-77.85375744	-77.84817638	-77.84257937	-77.83696663	-77.8313384	-77.8256949	-77.82003636	-77.814363	-77.80867507	-77.80297278	-77.79725637	-77.79152607	-77.78578212	-77.78002474	-77.77425417	-77.76847064	-77.76267438	-77.75686564	-77.75104465	-77.74521164	-77.73936685	-77.73351052	-77.72764289	-77.72176419	-77.71587466	-77.70997454	-77.70406407	-77.6981435	-77.69221306	-77.68627299	-77.68032353	-77.67436493	-77.66839743	-77.66242127	-77.6564367	-77.65044395	-77.64444327	-77.63843491	-77.63241911	-77.62639612	-77.62036617	-77.61432952	-77.60828642	-77.6022371	-77.59618181	-77.5901208	-77.58405432	-77.57798262	-77.57190594	-77.56582452	-77.55973862	-77.55364849	-77.54755437	-77.54145651	-77.53535517	-77.52925058	-77.52314299	-77.51703267	-77.51091985	-77.50480478	-77.49868772	-77.49256891	-77.4864486	-77.48032704	-77.47420449	-77.46808118	-77.46195738	-77.45583333 ];
yunit = [39.69444444	39.69442948	39.69438459	39.69430977	39.69420504	39.69407038	39.69390582	39.69371135	39.69348698	39.69323273	39.69294859	39.69263459	39.69229074	39.69191705	39.69151353	39.69108021	39.6906171	39.69012422	39.68960158	39.68904922	39.68846715	39.68785539	39.68721398	39.68654293	39.68584228	39.68511206	39.68435229	39.683563	39.68274423	39.681896	39.68101837	39.68011135	39.67917499	39.67820933	39.6772144	39.67619024	39.67513691	39.67405443	39.67294286	39.67180223	39.67063261	39.66943402	39.66820653	39.66695018	39.66566503	39.66435112	39.6630085	39.66163725	39.6602374	39.65880902	39.65735217	39.65586689	39.65435327	39.65281135	39.6512412	39.64964288	39.64801646	39.64636201	39.64467958	39.64296926	39.6412311	39.63946519	39.63767159	39.63585037	39.63400162	39.63212539	39.63022178	39.62829086	39.6263327	39.62434739	39.62233501	39.62029563	39.61822935	39.61613624	39.61401639	39.61186989	39.60969683	39.60749728	39.60527135	39.60301912	39.60074069	39.59843613	39.59610556	39.59374907	39.59136674	39.58895868	39.58652499	39.58406575	39.58158108	39.57907108	39.57653584	39.57397547	39.57139007	39.56877975	39.56614461	39.56348476	39.56080031	39.55809136	39.55535803	39.55260043	39.54981867	39.54701286	39.54418311	39.54132955	39.53845228	39.53555142	39.53262709	39.52967941	39.52670849	39.52371447	39.52069745	39.51765756	39.51459493	39.51150967	39.50840192	39.50527179	39.50211942	39.49894493	39.49574846	39.49253012	39.48929005	39.48602838	39.48274524	39.47944077	39.4761151	39.47276836	39.46940069	39.46601222	39.46260309	39.45917345	39.45572341	39.45225314	39.44876276	39.44525241	39.44172225	39.43817241	39.43460302	39.43101425	39.42740623	39.42377911	39.42013303	39.41646814	39.41278459	39.40908253	39.4053621	39.40162346	39.39786676	39.39409214	39.39029976	39.38648978	39.38266233	39.37881759	39.3749557	39.37107682	39.36718111	39.36326871	39.3593398	39.35539452	39.35143304	39.34745551	39.34346209	39.33945295	39.33542824	39.33138813	39.32733278	39.32326235	39.31917701	39.31507691	39.31096223	39.30683312	39.30268976	39.29853231	39.29436094	39.2901758	39.28597708	39.28176494	39.27753955	39.27330107	39.26904968	39.26478555	39.26050885	39.25621974	39.2519184	39.24760501	39.24327973	39.23894274	39.2345942	39.23023431	39.22586322	39.22148112	39.21708817	39.21268456	39.20827046	39.20384604	39.19941149	39.19496697	39.19051268	39.18604877	39.18157544	39.17709286	39.17260121	39.16810067	39.16359142	39.15907363	39.1545475	39.15001318	39.14547088	39.14092077	39.13636303	39.13179783	39.12722537	39.12264583	39.11805938	39.11346622	39.10886651	39.10426045	39.09964822	39.09503	39.09040598	39.08577633	39.08114124	39.0765009	39.07185549	39.0672052	39.06255021	39.05789069	39.05322685	39.04855886	39.04388691	39.03921119	39.03453187	39.02984915	39.0251632	39.02047423	39.0157824	39.01108791	39.00639094	39.00169169	38.99699032	38.99228704	38.98758203	38.98287546	38.97816754	38.97345844	38.96874835	38.96403746	38.95932595	38.95461401	38.94990182	38.94518958	38.94047746	38.93576566	38.93105436	38.92634374	38.92163399	38.9169253	38.91221785	38.90751182	38.90280741	38.8981048	38.89340417	38.88870572	38.88400961	38.87931604	38.8746252	38.86993726	38.86525242	38.86057086	38.85589275	38.85121829	38.84654766	38.84188104	38.83721861	38.83256057	38.82790708	38.82325834	38.81861453	38.81397582	38.80934241	38.80471447	38.80009219	38.79547574	38.79086531	38.78626108	38.78166322	38.77707193	38.77248737	38.76790973	38.76333919	38.75877593	38.75422012	38.74967194	38.74513158	38.74059921	38.736075	38.73155914	38.7270518	38.72255315	38.71806338	38.71358266	38.70911115	38.70464905	38.70019652	38.69575374	38.69132088	38.68689811	38.6824856	38.67808354	38.67369208	38.66931141	38.66494168	38.66058308	38.65623578	38.65189993	38.64757572	38.6432633	38.63896286	38.63467455	38.63039854	38.626135	38.6218841	38.61764599	38.61342086	38.60920885	38.60501014	38.60082488	38.59665325	38.5924954	38.58835149	38.58422169	38.58010615	38.57600504	38.57191851	38.56784673	38.56378986	38.55974804	38.55572144	38.55171021	38.54771451	38.5437345	38.53977032	38.53582214	38.5318901	38.52797436	38.52407508	38.52019239	38.51632646	38.51247742	38.50864544	38.50483066	38.50103323	38.49725329	38.49349099	38.48974648	38.4860199	38.48231139	38.47862111	38.47494919	38.47129578	38.46766101	38.46404502	38.46044797	38.45686998	38.45331119	38.44977175	38.44625178	38.44275143	38.43927083	38.43581011	38.43236942	38.42894887	38.42554861	38.42216876	38.41880946	38.41547083	38.41215301	38.40885612	38.40558029	38.40232565	38.39909231	38.39588041	38.39269008	38.38952142	38.38637458	38.38324965	38.38014678	38.37706607	38.37400765	38.37097163	38.36795814	38.36496728	38.36199917	38.35905393	38.35613167	38.3532325	38.35035653	38.34750388	38.34467466	38.34186897	38.33908692	38.33632862	38.33359417	38.33088368	38.32819726	38.32553501	38.32289703	38.32028342	38.31769428	38.31512971	38.31258981	38.31007469	38.30758442	38.30511912	38.30267887	38.30026378	38.29787392	38.2955094	38.2931703	38.29085672	38.28856874	38.28630645	38.28406994	38.2818593	38.2796746	38.27751594	38.27538339	38.27327704	38.27119697	38.26914326	38.26711599	38.26511523	38.26314106	38.26119356	38.2592728	38.25737886	38.25551181	38.25367172	38.25185866	38.2500727	38.24831391	38.24658235	38.2448781	38.24320122	38.24155177	38.23992981	38.23833542	38.23676864	38.23522954	38.23371818	38.23223462	38.23077891	38.2293511	38.22795127	38.22657945	38.22523569	38.22392006	38.22263261	38.22137337	38.2201424	38.21893975	38.21776546	38.21661958	38.21550215	38.21441321	38.21335281	38.21232099	38.21131778	38.21034323	38.20939737	38.20848024	38.20759187	38.20673229	38.20590155	38.20509967	38.20432668	38.20358261	38.2028675	38.20218136	38.20152423	38.20089612	38.20029707	38.1997271	38.19918622	38.19867446	38.19819184	38.19773838	38.1973141	38.196919	38.19655311	38.19621644	38.195909	38.1956308	38.19538187	38.19516219	38.19497179	38.19481067	38.19467883	38.19457629	38.19450304	38.19445909	38.19444444	38.19445909	38.19450304	38.19457629	38.19467883	38.19481067	38.19497179	38.19516219	38.19538187	38.1956308	38.195909	38.19621644	38.19655311	38.196919	38.1973141	38.19773838	38.19819184	38.19867446	38.19918622	38.1997271	38.20029707	38.20089612	38.20152423	38.20218136	38.2028675	38.20358261	38.20432668	38.20509967	38.20590155	38.20673229	38.20759187	38.20848024	38.20939737	38.21034323	38.21131778	38.21232099	38.21335281	38.21441321	38.21550215	38.21661958	38.21776546	38.21893975	38.2201424	38.22137337	38.22263261	38.22392006	38.22523569	38.22657945	38.22795127	38.2293511	38.23077891	38.23223462	38.23371818	38.23522954	38.23676864	38.23833542	38.23992981	38.24155177	38.24320122	38.2448781	38.24658235	38.24831391	38.2500727	38.25185866	38.25367172	38.25551181	38.25737886	38.2592728	38.26119356	38.26314106	38.26511523	38.26711599	38.26914326	38.27119697	38.27327704	38.27538339	38.27751594	38.2796746	38.2818593	38.28406994	38.28630645	38.28856874	38.29085672	38.2931703	38.2955094	38.29787392	38.30026378	38.30267887	38.30511912	38.30758442	38.31007469	38.31258981	38.31512971	38.31769428	38.32028342	38.32289703	38.32553501	38.32819726	38.33088368	38.33359417	38.33632862	38.33908692	38.34186897	38.34467466	38.34750388	38.35035653	38.3532325	38.35613167	38.35905393	38.36199917	38.36496728	38.36795814	38.37097163	38.37400765	38.37706607	38.38014678	38.38324965	38.38637458	38.38952142	38.39269008	38.39588041	38.39909231	38.40232565	38.40558029	38.40885612	38.41215301	38.41547083	38.41880946	38.42216876	38.42554861	38.42894887	38.43236942	38.43581011	38.43927083	38.44275143	38.44625178	38.44977175	38.45331119	38.45686998	38.46044797	38.46404502	38.46766101	38.47129578	38.47494919	38.47862111	38.48231139	38.4860199	38.48974648	38.49349099	38.49725329	38.50103323	38.50483066	38.50864544	38.51247742	38.51632646	38.52019239	38.52407508	38.52797436	38.5318901	38.53582214	38.53977032	38.5437345	38.54771451	38.55171021	38.55572144	38.55974804	38.56378986	38.56784673	38.57191851	38.57600504	38.58010615	38.58422169	38.58835149	38.5924954	38.59665325	38.60082488	38.60501014	38.60920885	38.61342086	38.61764599	38.6218841	38.626135	38.63039854	38.63467455	38.63896286	38.6432633	38.64757572	38.65189993	38.65623578	38.66058308	38.66494168	38.66931141	38.67369208	38.67808354	38.6824856	38.68689811	38.69132088	38.69575374	38.70019652	38.70464905	38.70911115	38.71358266	38.71806338	38.72255315	38.7270518	38.73155914	38.736075	38.74059921	38.74513158	38.74967194	38.75422012	38.75877593	38.76333919	38.76790973	38.77248737	38.77707193	38.78166322	38.78626108	38.79086531	38.79547574	38.80009219	38.80471447	38.80934241	38.81397582	38.81861453	38.82325834	38.82790708	38.83256057	38.83721861	38.84188104	38.84654766	38.85121829	38.85589275	38.86057086	38.86525242	38.86993726	38.8746252	38.87931604	38.88400961	38.88870572	38.89340417	38.8981048	38.90280741	38.90751182	38.91221785	38.9169253	38.92163399	38.92634374	38.93105436	38.93576566	38.94047746	38.94518958	38.94990182	38.95461401	38.95932595	38.96403746	38.96874835	38.97345844	38.97816754	38.98287546	38.98758203	38.99228704	38.99699032	39.00169169	39.00639094	39.01108791	39.0157824	39.02047423	39.0251632	39.02984915	39.03453187	39.03921119	39.04388691	39.04855886	39.05322685	39.05789069	39.06255021	39.0672052	39.07185549	39.0765009	39.08114124	39.08577633	39.09040598	39.09503	39.09964822	39.10426045	39.10886651	39.11346622	39.11805938	39.12264583	39.12722537	39.13179783	39.13636303	39.14092077	39.14547088	39.15001318	39.1545475	39.15907363	39.16359142	39.16810067	39.17260121	39.17709286	39.18157544	39.18604877	39.19051268	39.19496697	39.19941149	39.20384604	39.20827046	39.21268456	39.21708817	39.22148112	39.22586322	39.23023431	39.2345942	39.23894274	39.24327973	39.24760501	39.2519184	39.25621974	39.26050885	39.26478555	39.26904968	39.27330107	39.27753955	39.28176494	39.28597708	39.2901758	39.29436094	39.29853231	39.30268976	39.30683312	39.31096223	39.31507691	39.31917701	39.32326235	39.32733278	39.33138813	39.33542824	39.33945295	39.34346209	39.34745551	39.35143304	39.35539452	39.3593398	39.36326871	39.36718111	39.37107682	39.3749557	39.37881759	39.38266233	39.38648978	39.39029976	39.39409214	39.39786676	39.40162346	39.4053621	39.40908253	39.41278459	39.41646814	39.42013303	39.42377911	39.42740623	39.43101425	39.43460302	39.43817241	39.44172225	39.44525241	39.44876276	39.45225314	39.45572341	39.45917345	39.46260309	39.46601222	39.46940069	39.47276836	39.4761151	39.47944077	39.48274524	39.48602838	39.48929005	39.49253012	39.49574846	39.49894493	39.50211942	39.50527179	39.50840192	39.51150967	39.51459493	39.51765756	39.52069745	39.52371447	39.52670849	39.52967941	39.53262709	39.53555142	39.53845228	39.54132955	39.54418311	39.54701286	39.54981867	39.55260043	39.55535803	39.55809136	39.56080031	39.56348476	39.56614461	39.56877975	39.57139007	39.57397547	39.57653584	39.57907108	39.58158108	39.58406575	39.58652499	39.58895868	39.59136674	39.59374907	39.59610556	39.59843613	39.60074069	39.60301912	39.60527135	39.60749728	39.60969683	39.61186989	39.61401639	39.61613624	39.61822935	39.62029563	39.62233501	39.62434739	39.6263327	39.62829086	39.63022178	39.63212539	39.63400162	39.63585037	39.63767159	39.63946519	39.6412311	39.64296926	39.64467958	39.64636201	39.64801646	39.64964288	39.6512412	39.65281135	39.65435327	39.65586689	39.65735217	39.65880902	39.6602374	39.66163725	39.6630085	39.66435112	39.66566503	39.66695018	39.66820653	39.66943402	39.67063261	39.67180223	39.67294286	39.67405443	39.67513691	39.67619024	39.6772144	39.67820933	39.67917499	39.68011135	39.68101837	39.681896	39.68274423	39.683563	39.68435229	39.68511206	39.68584228	39.68654293	39.68721398	39.68785539	39.68846715	39.68904922	39.68960158	39.69012422	39.6906171	39.69108021	39.69151353	39.69191705	39.69229074	39.69263459	39.69294859	39.69323273	39.69348698	39.69371135	39.69390582	39.69407038	39.69420504	39.69430977	39.69438459	39.69442948	39.69444444];

xmax = max(xunit);
xmin = min(xunit);



%% Trajectories on 2D Map - per Set
%close all
for p = 1:numel(compilation)
    
    for k = 1:numel(compilation(p).evolutions)
          
      if compilation(p).evolutions(k).population(1).indices.printed > 0

        fig_num = p + 3000 + k*1;
        figure(fig_num)
        hold on
        title(strcat('Trajectories - Generation:_{ }',num2str(k - 1),' - ',strrep(convertCharsToStrings(compilation(p).case),'_',' ')))
        set(figure(fig_num),'units','pixels','position',[0,0,1200,600])
        xlabel('\tau (deg)') % x-axis label
        ylabel('\delta (deg)') % y-axis label
        img = imread('img.jpg');
        imagesc([-180 180], [-90 90], (flipud(img)));
        set (gca,'Fontsize',20)
        set(gca,'YTick', -90:15:90);
        set(gca,'XTick', -180:30:180);
        %xlim([-30 15])
        %ylim([38 75])
        xlim([-180 180])
        ylim([-90 90])
        
        for ii = compilation(p).evolutions(k).population(1).indices.printed
            if  compilation(1).validation == 1
                plot(...
                    compilation(p).evolutions(k).population(ii).dependentVariableTimeHistory.longitudeAngle,...
                    compilation(p).evolutions(k).population(ii).dependentVariableTimeHistory.latitudeAngle,'g','LineWidth',2)
            else
                
                plot(...
                    ...%rad2deg(compilation(p).evolutions(k).population(ii).dependentVariableTimeHistory.longitudeAngle),...
                    ...%rad2deg(compilation(p).evolutions(k).population(ii).dependentVariableTimeHistory.latitudeAngle),'g','LineWidth',2)
                    compilation(p).evolutions(k).population(ii).dependentVariableTimeHistory.longitudeAngle.value,...
                    compilation(p).evolutions(k).population(ii).dependentVariableTimeHistory.latitudeAngle.value,'LineWidth',2)
            end
        end
        
        
        
        
        
        plot(lon_f_deg,lat_f_deg,'MarkerSize',20)
        plot(lon_f_deg*[1 1],90*[-1 1],'k','LineWidth',2)
        plot(180*[-1 1],lat_f_deg*[1 1],'k','LineWidth',2)
        plot(xunit, yunit,'k','LineWidth',2);
        scatter(lon_f_deg,lat_f_deg,100,'r','x')
        axP = get(gca,'Position');
        %  legend(legendtext,'Location','southeastoutside')
        set(gca, 'Position', axP)
        
        clear legendtext
        %xlim([(lon_IAD_deg - 20) (lon_IAD_deg + 20)])
        %ylim([(lat_IAD_deg - 10) (lat_IAD_deg + 10)])
        hold off
        saveas(...
            figure(fig_num),...
            strcat(...
            compilation(p).figurePath,...
            'Trajectories_2D_Map_',...
            num2str(k - 1),...
            '_Set',...
            convertCharsToStrings(compilation(p).case),...
            '.png'),...
            'png');
        %    close(fig_num);
    end
    end
end

%% Trajectories on 2D Map - Zoom - per Set
%close all
for p = 1:numel(compilation)
    
    for k = 1:numel(compilation(p).evolutions)
        
        if compilation(p).evolutions(k).population(1).indices.printed > 0
            
            fig_num = p + 3100 + k*1;
            figure(fig_num)
            hold on
            title(strcat('Trajectories - Zoom - Generation:_{ }',num2str(k - 1),' - ',strrep(convertCharsToStrings(compilation(p).case),'_',' ')))
            set(figure(fig_num),'units','pixels','position',[0,0,1200,600])
            xlabel('\tau (deg)') % x-axis label
            ylabel('\delta (deg)') % y-axis label
            img = imread('img.jpg');
            imagesc([-180 180], [-90 90], (flipud(img)));
            set (gca,'Fontsize',20)
            set(gca,'YTick', -90:2:90);
            set(gca,'XTick', -180:2:180);
            xlim([(lon_f_deg - 5) (lon_f_deg + 27)])
           ylim([(lat_f_deg - 5) (lat_f_deg + 11)])
            %xlim([-60 10])
            %ylim([40 62])
            
            if compilation(1).validation == 1
                xlim([-82 -42])
                ylim([-8 12])
                
            end
            
            
            for ii = compilation(p).evolutions(k).population(1).indices.printed
                %for ii = 19
                if  compilation(1).validation == 1
                    plot(...
                        compilation(p).evolutions(k).population(ii).dependentVariableTimeHistory.longitudeAngle,...
                        compilation(p).evolutions(k).population(ii).dependentVariableTimeHistory.latitudeAngle,'g','LineWidth',2)
                else
                    h = plot(...
                        ...%rad2deg(compilation(p).evolutions(k).population(ii).dependentVariableTimeHistory.longitudeAngle),...
                        ...%rad2deg(compilation(p).evolutions(k).population(ii).dependentVariableTimeHistory.latitudeAngle),'g','LineWidth',2)
                        compilation(p).evolutions(k).population(ii).dependentVariableTimeHistory.longitudeAngle.value,...
                        compilation(p).evolutions(k).population(ii).dependentVariableTimeHistory.latitudeAngle.value,'LineWidth',2);
                    set(gca, 'ColorOrder', circshift(get(gca, 'ColorOrder'), numel(h)));
                    scatter(...
                        compilation(p).evolutions(k).population(ii).dependentVariableTimeHistory.dynamicTargetLongitude.value,...
                        compilation(p).evolutions(k).population(ii).dependentVariableTimeHistory.dynamicTargetLatitude.value,'LineWidth',2)
                    
                end
                %end
            end
            plot(lon_f_deg,lat_f_deg,'MarkerSize',20);
            plot(lon_f_deg*[1 1],90*[-1 1],'k','LineWidth',2);
            plot(180*[-1 1],lat_f_deg*[1 1],'k','LineWidth',2);
            plot(xunit, yunit,'k','LineWidth',2);
            scatter(lon_f_deg,lat_f_deg,100,'r','x');
            
           % I = find( compilation(p).evolutions(k).population(ii).dependentVariableTimeHistory.dynamicTargetLongitude < lon_f_deg);
            
           % derp = compilation(p).evolutions(k).population(ii).dependentVariableTimeHistory.headingAngle(I);
            
            
            axP = get(gca,'Position');
            % legend(legendtext,'Location','southeastoutside')
            set(gca, 'Position', axP)
            
            clear legendtext
            %xlim([(lon_IAD_deg - 20) (lon_IAD_deg + 20)])
            %ylim([(lat_IAD_deg - 10) (lat_IAD_deg + 10)])
            hold off
            
            saveas(...
                figure(fig_num),...
                strcat(...
                compilation(p).figurePath,...
                'Trajectories_2D_Map_Zoom_',...
                num2str(k - 1),...
                '_Set',...
                convertCharsToStrings(compilation(p).case),...
                '.png'),...
                'png');
            %  close(fig_num);
        end
    end
end

%% Dynamic Target Coordinates - Zoom - per Set
%close all
for p = 1:numel(compilation)
    
    for k = 1:numel(compilation(p).evolutions)
        fig_num = p + 3400 + k*1;
        figure(fig_num)
        hold on
        title(strcat('Dynamic Target - Zoom - Generation:_{ }',num2str(k - 1),' - ',strrep(convertCharsToStrings(compilation(p).case),'_',' ')))
        set(figure(fig_num),'units','pixels','position',[0,0,1200,600])
        xlabel('\tau (deg)') % x-axis label
        ylabel('\delta (deg)') % y-axis label
        img = imread('img.jpg');
        imagesc([-180 180], [-90 90], (flipud(img)));
        set (gca,'Fontsize',20)
        set(gca,'YTick', -90:.25:90);
        set(gca,'XTick', -180:.5:180);
        xlim([(lon_f_deg - 2) (lon_f_deg + 2)])
        ylim([(lat_f_deg - 1) (lat_f_deg + 1)])
        
        if compilation(1).validation == 1
            xlim([-82 -42])
            ylim([-8 12])
            
        end
        
        plot(lon_f_deg,lat_f_deg,'MarkerSize',20)
        plot(lon_f_deg*[1 1],90*[-1 1],'k','LineWidth',2)
        plot(180*[-1 1],lat_f_deg*[1 1],'k','LineWidth',2)
        plot(xunit, yunit,'k','LineWidth',2);
        scatter(lon_f_deg,lat_f_deg,100,'r','x')
        
        for ii = compilation(p).evolutions(k).population(1).indices.printed
            scatter(...
                compilation(p).evolutions(k).population(ii).dependentVariableTimeHistory.dynamicTargetLongitude,...
                compilation(p).evolutions(k).population(ii).dependentVariableTimeHistory.dynamicTargetLatitude,10)
        end
        
        
        axP = get(gca,'Position');
        % legend(legendtext,'Location','southeastoutside')
        set(gca, 'Position', axP)
        
        clear legendtext
        %xlim([(lon_IAD_deg - 20) (lon_IAD_deg + 20)])
        %ylim([(lat_IAD_deg - 10) (lat_IAD_deg + 10)])
        hold off
        
        saveas(...
            figure(fig_num),...
            strcat(...
            compilation(p).figurePath,...
            'dynamicTargetCoordinates_Zoom_',...
            num2str(k - 1),...
            '_Set',...
            convertCharsToStrings(compilation(p).case),...
            '.png'),...
            'png');
        close(fig_num);
    end
end
%% Vertex Coordinates - Zoom - per Set
%close all
for p = 1:numel(compilation)
    
    for k = 1:numel(compilation(p).evolutions)
        fig_num = p + 3300 + k*1;
        figure(fig_num)
        hold on
        title(strcat('Vertex Location - Zoom - Generation:_{ }',num2str(k - 1),' - ',strrep(convertCharsToStrings(compilation(p).case),'_',' ')))
        set(figure(fig_num),'units','pixels','position',[0,0,1200,600])
        xlabel('\tau (deg)') % x-axis label
        ylabel('\delta (deg)') % y-axis label
        img = imread('img.jpg');
        imagesc([-180 180], [-90 90], (flipud(img)));
        set (gca,'Fontsize',20)
        set(gca,'YTick', -90:15:90);
        set(gca,'XTick', -180:30:180);
        %xlim([-30 15])
        %ylim([38 75])
        xlim([-180 180])
        ylim([-90 90])
        
        if compilation(1).validation == 1
            xlim([-82 -42])
            ylim([-8 12])
            
        end
        
        
        for ii = compilation(p).evolutions(k).population(1).indices.printed
            scatter(...
                compilation(p).evolutions(k).population(ii).dependentVariableTimeHistory.vertexLongitude,...
                compilation(p).evolutions(k).population(ii).dependentVariableTimeHistory.vertexLatitude,10)
        end
        
        
        plot(lon_f_deg,lat_f_deg,'MarkerSize',20)
        plot(lon_f_deg*[1 1],90*[-1 1],'k','LineWidth',2)
        plot(180*[-1 1],lat_f_deg*[1 1],'k','LineWidth',2)
        plot(xunit, yunit,'k','LineWidth',2);
        scatter(lon_f_deg,lat_f_deg,100,'r','x')
        axP = get(gca,'Position');
        % legend(legendtext,'Location','southeastoutside')
        set(gca, 'Position', axP)
        
        clear legendtext
        %xlim([(lon_IAD_deg - 20) (lon_IAD_deg + 20)])
        %ylim([(lat_IAD_deg - 10) (lat_IAD_deg + 10)])
        hold off
        
        saveas(...
            figure(fig_num),...
            strcat(...
            compilation(p).figurePath,...
            'vertexCoordinates_',...
            num2str(k - 1),...
            '_Set',...
            convertCharsToStrings(compilation(p).case),...
            '.png'),...
            'png');
        close(fig_num);
    end
end




% %% Trajectory on 2D Map - Zoom - per Generation
% %close all
% for p = 1:numel(compilation)
%
%     for k = 1:numel(compilation(p).evolutions)
%
%         fig_num = p*10 + 310 + k;
%         figure(fig_num)
%         hold on
%         title(strcat('Trajectories - Zoom - Generation:_{ }',num2str(k - 1),' Set:_{ } ',strrep(convertCharsToStrings(compilation(p).case),'_',' ')))
%         set(figure(fig_num),'units','pixels','position',[0,0,1200,600])
%         xlabel('\tau (deg)') % x-axis label
%         ylabel('\delta (deg)') % y-axis label
%         img = imread('img.jpg');
%         imagesc([-180 180], [-90 90], (flipud(img)));
%         set (gca,'Fontsize',20)
%         set(gca,'YTick', -90:1:90);
%         set(gca,'XTick', -180:1:180);
%         xlim([(lon_f_deg - 10) (lon_f_deg + 10)])
%         ylim([(lat_f_deg - 5) (lat_f_deg + 5)])
%
%         if compilation(1).validation == 1
%
%             xlim([-72 -52])
%             ylim([-3 7])
%
%         end
%
% for ii = 1:numel(compilation(p).evolutions(k).trajectories)
%
%             plot(...
%                 compilation(p).evolutions(k).trajectories(ii).individual.longitude_angle,...
%                 compilation(p).evolutions(k).trajectories(ii).individual.latitude_angle,'LineWidth',2)
%             %legendtext(k) = cellstr(strcat(strrep(convertCharsToStrings(compilation(p).case),'_',' '),' - Generation:_{ } ', num2str(k-1)));
%
%         end
%
%         plot(lon_f_deg,lat_f_deg,'MarkerSize',20)
%         plot(lon_f_deg*[1 1],90*[-1 1],'k','LineWidth',2)
%         plot(180*[-1 1],lat_f_deg*[1 1],'k','LineWidth',2)
%         plot(xunit, yunit,'k','LineWidth',2);
%         scatter(lon_f_deg,lat_f_deg,100,'r','x')
%         axP = get(gca,'Position');
%         % legend(legendtext,'Location','southeastoutside')
%         set(gca, 'Position', axP)
%
%         clear legendtext
%         %xlim([(lon_IAD_deg - 20) (lon_IAD_deg + 20)])
%         %ylim([(lat_IAD_deg - 10) (lat_IAD_deg + 10)])
%         hold off
%         saveas(...
%             figure(fig_num),...
%             strcat(            compilations(1).evolutions.mainpath,...
%             '/figures/Trajectories_2D_Map_Zoom_Generation_',...
%             num2str(k - 1),...
%             '_Set',...
%             convertCharsToStrings(compilation(p).case),...
%             '.png'),...
%             'png');
%         close(fig_num);
%
%     end
% end
%%
pp = 1;
'here';
%% Plot Trajectories on 3D Earth

for p = 1:numel(compilation)
    fig_num = p + 200 + pp;
    figure(fig_num)
    hold on
    title(strcat('Trajectory on spherical Earth - 1',strrep(convertCharsToStrings(compilation(p).case),'_',' ')))
    %set(figure(p + 200),'units','pixels','position',[0,0,1200,600])
    %   xlabel('\tau (deg)') % x-axis label
    %   ylabel('\delta (deg)') % y-axis label
    %   imagesc([-180 180], [-90 90], (flipud(img)));
    set (gca,'Fontsize',20)
    set(gca,'XTick',[], 'YTick', [])
    
    XTickLabel = [];
    YTickLabel = [];
    plotearth('Maptype','bluemarble',...
        'NEOMap',...
        '/Users/bislip/Cloud Storage/OneDrive/School/TUDelft/Space Flight/Thesis/tudatBundle/tudatApplications/Space4ErrBody.git/Space4ErrBody_0/matlab/additionalfunctions/PlotEarth/PlotEarth/BlueMarble.png',...
        'SampleStep',1,'FullColor',true,'Shape','spheroid',...
        'viewpoint', [44 -5],fig_num,fig_num);
    axis('off');
    for k = 1:numel(compilation(p).evolutions)
        for ii = compilation(p).evolutions(k).population(1).indices.printed
            
            
            color_line3(...
                compilation(p).evolutions(k).population(ii).dependentVariableTimeHistory.x_R,...
                compilation(p).evolutions(k).population(ii).dependentVariableTimeHistory.y_R,...
                compilation(p).evolutions(k).population(ii).dependentVariableTimeHistory.z_R,...
                compilation(p).evolutions(k).population(ii).dependentVariableTimeHistory.timeOfFlight);
            %                 scatter3(...
            %                     compilation(p).evolutions(i).trajectories(k).individual.x_R(1),...
            %                     compilation(p).evolutions(i).trajectories(k).individual.y_R(1),...
            %                     compilation(p).evolutions(i).trajectories(k).individual.z_R(1),'filled')
            %                 scatter3(...
            %                     compilation(p).evolutions(i).trajectories(k).individual.x_R(end),...
            %                     compilation(p).evolutions(i).trajectories(k).individual.y_R(end),...
            %                     compilation(p).evolutions(i).trajectories(k).individual.z_R(end),'filled')
        end
    end
    view([44,-5])
    axis off
    grid off
    ax = gca;               % get the current axis
    ax.Clipping = 'off';
    hold off
    saveas(figure(fig_num),strcat(compilation(p).figurePath,'Trajectories_3D_Map_1_Set',convertCharsToStrings(compilation(p).case),'.png'));
    
end
pp = pp + 1;

%%
% for p = 1:numel(compilation)
%
% figure(234234)
% hold on
%
%
%
%         for i = 1:numel(compilation(p).evolutions)
%             for k = 1:numel(compilation(p).evolutions(i).trajectories)
%                 color_line3(...
%                     compilation(p).evolutions(i).trajectories(k).individual.x_R,...
%                     compilation(p).evolutions(i).trajectories(k).individual.y_R,...
%                     compilation(p).evolutions(i).trajectories(k).individual.z_R,...
%                     compilation(p).evolutions(i).trajectories(k).individual.time_vector);
%                 scatter3(...
%                     compilation(p).evolutions(i).trajectories(k).individual.x_R(1),...
%                     compilation(p).evolutions(i).trajectories(k).individual.y_R(1),...
%                     compilation(p).evolutions(i).trajectories(k).individual.z_R(1),'filled')
%                 scatter3(...
%                     compilation(p).evolutions(i).trajectories(k).individual.x_R(end),...
%                     compilation(p).evolutions(i).trajectories(k).individual.y_R(end),...
%                     compilation(p).evolutions(i).trajectories(k).individual.z_R(end),'filled')
%             end
%         end
%
%         view(3)
%
% end
%
%
%
%
% % %
% %
% %
% %
% %
% % %% Plot Trajectories on 3D Earth
% %
% % for p = 1:numel(compilation)
% %
% %     figure(p + 300)
% %     hold on
% %     title(strcat('Trajectory on spherical Earth - 2',strrep(convertCharsToStrings(compilation(p).case),'_',' ')))
% %     %set(figure(p + 200),'units','pixels','position',[0,0,1200,600])
% %     %   xlabel('\tau (deg)') % x-axis label
% %     %   ylabel('\delta (deg)') % y-axis label
% %     %   imagesc([-180 180], [-90 90], (flipud(img)));
% %     set (gca,'Fontsize',20)
% %     set(gca,'XTick',[], 'YTick', [])
% %
% %     axis('off');
% %     XTickLabel = [];
% %     YTickLabel = [];
% %     plotearth('Maptype','bluemarble','NEOMap',...
% %         '/Users/bislip/Cloud Storage/OneDrive/School/TUDelft/Space Flight/Thesis/code/PlotEarth/PlotEarth/BlueMarble.png',...
% %         'SampleStep',1,'FullColor',true,'Shape','spheroid',...
% %         'viewpoint', [-3 13],p + 300,p + 300);
% %
% %     for i = 1:numel(compilation(p).evolutions)
% %         for k = 1:numel(compilation(p).evolutions(i).trajectories)
% %             color_line3(...
% %                 compilation(p).evolutions(i).trajectories(k).individual.x_R,...
% %                 compilation(p).evolutions(i).trajectories(k).individual.y_R,...
% %                 compilation(p).evolutions(i).trajectories(k).individual.z_R,...
% %                 compilation(p).evolutions(i).trajectories(k).individual.time_vector);
% %             scatter3(...
% %                 compilation(p).evolutions(i).trajectories(k).individual.x_R(1),...
% %                 compilation(p).evolutions(i).trajectories(k).individual.y_R(1),...
% %                 compilation(p).evolutions(i).trajectories(k).individual.z_R(1),'filled')
% %             scatter3(...
% %                 compilation(p).evolutions(i).trajectories(k).individual.x_R(end),...
% %                 compilation(p).evolutions(i).trajectories(k).individual.y_R(end),...
% %                 compilation(p).evolutions(i).trajectories(k).individual.z_R(end),'filled')
% %         end
% %     end
% %     % view([12,-5])
% %     ax = gca;               % get the current axis
% %     ax.Clipping = 'off';
% %     hold off
% %     saveas(figure(fig_num),strcat(mainpath,'/figures/Trajectories_3D_Map_2_Set',convertCharsToStrings(compilation(p).case),'.png'));
% %
% % end
%
%
%
% %%
% % for p = 1:numel(compilation)
% %
% % %r = nan(1e6,26);
% % %t = nan(1e6,26);
% % figure(p + 400)
% % set(figure(p + 400),'units','pixels','position',[0,0,1200,600])
% % title('Trajectory in 3D - clipping disabled')
% % set (gca,'Fontsize',15)
% % xlabel('x (km) - Eath-Fixed') % x-axis label
% % ylabel('y (km) - Eath-Fixed') % y-axis label
% % zlabel('z (km) - Eath-Fixed') % z-axis label
% % xlim([4e3 5e3])
% % ylim([-6.5e3 0])
% % zlim([4.75e3 5.5e3])
% %
% % set(gca,'XTick', 4e3:.25e3:5e3);
% % set(gca,'YTick', -6.5e3:1e3:0e3);
% % set(gca,'zTick', 4.75e3:0.05e3:5.5e3);
% %
% % hold on
% % for k = 1:numel(compilation(p).evolutions(i).trajectories)
% %
% %
% %
% %
% %     plot3(compilation(p).evolutions(i).trajectories(k).individual.x_R/1e3,...
% %         compilation(p).evolutions(i).trajectories(k).individual.y_R/1e3,...
% %         compilation(p).evolutions(i).trajectories(k).individual.z_R/1e3);
% %
% %                 scatter3(compilation(p).evolutions(i).trajectories(k).individual.x_R(end)/1e3,...
% %                 compilation(p).evolutions(i).trajectories(k).individual.y_R(end)/1e3,...
% %                 compilation(p).evolutions(i).trajectories(k).individual.z_R(end)/1e3,'filled')
% %
% % end
% % view([44 -5])
% % ax = gca;               % get the current axis
% % ax.Clipping = 'off';
% % hold off
% %
% % saveas(gcf,strcat(mainpath,'/figures/Trajectory in 3D - 1 - ',strrep(convertCharsToStrings(compilation(p).case),'_',' '),'.png'));
% % end
%
% %% Grid Visualization: v_i, gamma_i, and chi_i
%
% % for p = 1:numel(compilation)
% %
% %     figure(p +500)
% %     hold on
% %     title(strcat('Inter-Continental Ballistic Tajectory - Cases tested -_{ } ',strrep(convertCharsToStrings(compilation(p).case),'_',' ')))
% %     set(figure(p+500),'units','pixels','position',[0,0,1200,600])
% %     set (gca,'Fontsize',20)
% %        extents1 = 8e3;
% % extents2 = 90;
% % extents3 = 360;
% % %plot3(extents1*[0 1],[0 0],[0 0],'k')
% % %plot3([0 0],extents2*[0 1],[0 0],'k')
% % %plot3([0 0],[0 0],extents3*[0 1],'k')
% % xlim(extents1*[0 1])
% % ylim(extents2*[0 1])
% % %zlim(extents3*[0 1])
% % grid on
% % xlabel('v_i (deg)') % x-axis label
% % ylabel('\gamma_i (deg)') % y-axis label
% % zlabel('\chi_i (deg)') % y-axis label
% %      view([36,15])
% %
% %     for i = 1:numel(compilation(p).evolutions)
% %             scatter3(compilation(p).evolutions(i).v_i,...
% %                 compilation(p).evolutions(i).gamma_i,...
% %                 compilation(p).evolutions(i).chi_i);
% %
% %
% %     end
% %
% %     hold off
% %         saveas(gcf,strcat(mainpath,'/figures/Inter-Continental Ballistic Tajectory - Cases tested -_{ } ',strrep(convertCharsToStrings(compilation(p).case),'_',' '),'.png'));
% %
% % end
%
%






end